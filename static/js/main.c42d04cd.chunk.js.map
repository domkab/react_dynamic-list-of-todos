{"version":3,"sources":["api.ts","components/TodoFilter/TodoFilter.tsx","components/TodoList/TodoList.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","_utils/debounce_generic.ts","index.tsx"],"names":["get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","FilterOption","TodoFilter","onFilter","onResetSearch","sortOptionChange","searchQuery","className","onChange","value","All","Active","Completed","type","placeholder","e","target","style","pointerEvents","onClick","TodoList","todos","onTodoSelect","selectedTodo","map","todo","id","completed","cn","title","Loader","TodoModal","useState","isLoading","setIsLoading","user","setUser","useEffect","userId","fetchedUser","finally","href","email","name","App","loading","setLoading","setTodos","filteredTodos","setFilteredTodos","currentFilterOption","setFilterOption","setSelectedTodo","setSearchQuery","loadTodos","a","loadedTodos","updateFilteredTodos","useCallback","term","filterOption","updatedTodos","trim","filter","toLowerCase","includes","handleSearch","debouncedUpdate","f","timerId","args","clearTimeout","window","debounce","handleTodoSelect","event","newSortOption","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c42d04cd.chunk.js","sourcesContent":["import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\n\ntype TodoFilterProps = {\n  searchQuery: string;\n  onFilter: (term: string) => void;\n  onResetSearch: () => void;\n  sortOptionChange: (\n    event: React.ChangeEvent<HTMLSelectElement>\n  ) => void;\n};\n\nexport enum FilterOption {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n\nexport const TodoFilter: React.FC<TodoFilterProps> = (\n  {\n    onFilter,\n    onResetSearch,\n    sortOptionChange,\n    searchQuery,\n  },\n) => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={sortOptionChange}\n          >\n            <option value={FilterOption.All}>All</option>\n            <option value={FilterOption.Active}>Active</option>\n            <option value={FilterOption.Completed}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={searchQuery}\n          onChange={e => onFilter(e.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {searchQuery && (\n            <button\n              data-cy=\"clearSearchButton\"\n              aria-label=\"Clear Search\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={onResetSearch}\n            />\n          )}\n\n        </span>\n      </p>\n    </form>\n  );\n};\n","import cn from 'classnames';\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype TodoListProps = {\n  todos: Todo[];\n  onTodoSelect: (todo: Todo) => void;\n  selectedTodo: Todo | null;\n};\n\nexport const TodoList: React.FC<TodoListProps> = (\n  { todos, onTodoSelect, selectedTodo },\n) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map((todo) => (\n        <tr data-cy=\"todo\" className=\"\" key={todo.id}>\n          <td className=\"is-vcentered\">{todo.id}</td>\n          <td className=\"is-vcentered\">\n            {todo.completed ? (\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            ) : null}\n          </td>\n          <td className=\"is-vcentered is-expanded\">\n            <p className={cn({\n              'has-text-success': todo.completed,\n              'has-text-danger': !todo.completed,\n            })}\n            >\n              {todo.title}\n            </p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              type=\"button\"\n              data-cy=\"selectButton\"\n              className=\"button\"\n              onClick={() => onTodoSelect(todo)}\n            >\n              {selectedTodo && selectedTodo.id === todo.id ? (\n                <span className=\"icon\">\n                  <i className=\"fas fa-eye-slash\" />\n                </span>\n              ) : (\n                <span className=\"icon\">\n                  <i className=\"far fa-eye\" />\n                </span>\n              )}\n            </button>\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport cn from 'classnames';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\n\ntype TodoModalprops = {\n  todo: Todo | null;\n  onTodoSelect: (todo: Todo | null) => void;\n};\n\nexport const TodoModal: React.FC<TodoModalprops> = (\n  { todo, onTodoSelect },\n) => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    if (todo) {\n      setIsLoading(true);\n      getUser(todo.userId)\n        .then(fetchedUser => {\n          setUser(fetchedUser);\n        })\n        .finally(() => {\n          setIsLoading(false);\n        });\n    }\n  }, [todo]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo?.id}`}\n            </div>\n\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              aria-label=\"Close modal\"\n              onClick={() => {\n                onTodoSelect(null);\n              }}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              <strong\n                className={cn({\n                  'has-text-success': todo?.completed,\n                  'has-text-danger': !todo?.completed,\n                })}\n              >\n                {todo?.completed ? 'Done' : 'Planned'}\n              </strong>\n\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import '@fortawesome/fontawesome-free/css/all.css';\nimport 'bulma/css/bulma.css';\nimport React, { useCallback, useEffect, useState } from 'react';\n\nimport { getTodos } from './api';\nimport { FilterOption, TodoFilter } from './components/TodoFilter';\nimport { TodoList } from './components/TodoList';\nimport { TodoModal } from './components/TodoModal';\nimport { Todo } from './types/Todo';\n\nimport { debounce } from './_utils/debounce_generic';\nimport { Loader } from './components/Loader';\n\nexport const App: React.FC = () => {\n  const [loading, setLoading] = useState(false);\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [filteredTodos, setFilteredTodos] = useState<Todo[]>(todos);\n  const [currentFilterOption, setFilterOption]\n    = useState<FilterOption>(FilterOption.All);\n\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const loadTodos = async () => {\n    setLoading(true);\n\n    try {\n      const loadedTodos = await getTodos();\n\n      setTodos(loadedTodos);\n      setFilteredTodos(loadedTodos);\n    } catch (error) {\n      setLoading(false);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    loadTodos();\n  }, []);\n\n  const updateFilteredTodos = useCallback(\n    (term: string, filterOption: FilterOption) => {\n      let updatedTodos = [...todos];\n\n      if (term.trim()) {\n        updatedTodos = updatedTodos.filter(\n          todo => todo.title.toLowerCase().includes(term.toLowerCase()),\n        );\n      }\n\n      switch (filterOption) {\n        case FilterOption.Active:\n          updatedTodos = updatedTodos.filter(todo => !todo.completed);\n          break;\n        case FilterOption.Completed:\n          updatedTodos = updatedTodos.filter(todo => todo.completed);\n          break;\n        default:\n          break;\n      }\n\n      setFilteredTodos(updatedTodos);\n    }, [todos],\n  );\n\n  const handleSearch = useCallback((term: string) => {\n    setSearchQuery(term);\n\n    const debouncedUpdate = debounce(() => {\n      updateFilteredTodos(term, currentFilterOption);\n    }, 600);\n\n    debouncedUpdate();\n  }, [currentFilterOption, updateFilteredTodos]);\n\n  const handleSortChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const newSortOption = event.target.value as FilterOption;\n\n    setFilterOption(newSortOption);\n    updateFilteredTodos(searchQuery, newSortOption);\n  };\n\n  const handleResetSearch = () => {\n    setSearchQuery('');\n    setFilteredTodos(todos);\n  };\n\n  const handleTodoSelect = (todo: Todo | null) => {\n    setSelectedTodo(todo);\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                onFilter={handleSearch}\n                onResetSearch={handleResetSearch}\n                searchQuery={searchQuery}\n                sortOptionChange={handleSortChange}\n              />\n            </div>\n\n            <div className=\"block\">\n              {loading && (\n                <Loader />\n              )}\n\n              <TodoList\n                todos={filteredTodos}\n                onTodoSelect={handleTodoSelect}\n                selectedTodo={selectedTodo}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          todo={selectedTodo}\n          onTodoSelect={handleTodoSelect}\n        />\n      )}\n    </>\n  );\n};\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nexport function debounce<T extends (...args: any[]) => any>(\n  f: T,\n  delay: number): (...args: Parameters<T>) => void {\n  let timerId: number | undefined;\n\n  return (...args: Parameters<T>) => {\n    clearTimeout(timerId);\n    timerId = window.setTimeout(() => f(...args), delay);\n  };\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}